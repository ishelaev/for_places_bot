# check_table_structure.py
from sqlalchemy import create_engine, text, inspect
from config import POSTGRES_URL

def check_table_structure():
    engine = create_engine(POSTGRES_URL)
    
    try:
        inspector = inspect(engine)
        
        if 'places' in inspector.get_table_names():
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ places —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
            columns = inspector.get_columns('places')
            print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã places:")
            for column in columns:
                print(f"  ‚Ä¢ {column['name']}: {column['type']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
            pk = inspector.get_pk_constraint('places')
            print(f"\nüîë –ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á: {pk}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
            unique_constraints = inspector.get_unique_constraints('places')
            print(f"\nüîí –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {unique_constraints}")
            
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ places –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")

if __name__ == "__main__":
    check_table_structure()
